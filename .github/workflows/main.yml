name: Build and Publish Docker Image

on:
  push:
    branches:
      - main  # Change this to the branch you want to trigger the workflow on
    paths:
      - 'server/**'
    paths-ignore:
      - 'infra/environments/prod/odicylens-api/.argocd-source-odicylens-api.yaml'

jobs:
  build_and_publish_docker_image:
    runs-on: ubuntu-latest

    env:
      APP_ENV: ${{ secrets.APP_ENV }}
      APP_SECRET: ${{ secrets.APP_SECRET }}
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      CORS_ALLOW_ORIGIN: ${{ secrets.CORS_ALLOW_ORIGIN }}
      DATABASE_VERSION: ${{ secrets.DATABASE_VERSION }}
      MERCURE_JWT_SECRET: ${{ secrets.MERCURE_JWT_SECRET }}
      MERCURE_PUBLIC_URL: ${{ secrets.MERCURE_PUBLIC_URL }}
      MERCURE_URL: ${{ secrets.MERCURE_URL }}
      TRUSTED_PROXIES: ${{ secrets.TRUSTED_PROXIES }}
      TRUSTED_HOSTS: ${{ secrets.TRUSTED_HOSTS }}
      JWT_PASSPHRASE: ${{ secrets.JWT_PASSPHRASE }}
      JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
      JWT_PUBLIC_KEY: ${{ secrets.JWT_PUBLIC_KEY }}
      MAILER_DSN: ${{ secrets.MAILER_DSN }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get the latest Docker image tag
        id: get_latest_tag
        run: |
          LATEST_TAG=$(curl -s "https://registry.hub.docker.com/v2/repositories/popokola/odicylens-api/tags" | jq -r '.results[].name' | grep -E '^v0\.1\.[0-9]+$' | sort -rV | head -n 1)
          CURRENT_X=${LATEST_TAG#v0.1.}
          NEW_X=$((CURRENT_X + 1))
          echo "::set-output name=NEW_TAG::v0.1.$NEW_X"

      - name: Generate .env File
        run: |
          echo "APP_ENV=${{ secrets.APP_ENV }}" >> ./server/api/.env
          echo "APP_SECRET=${{ secrets.APP_SECRET }}" >> ./server/api/.env
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> ./server/api/.env
          echo "CORS_ALLOW_ORIGIN='*'" >> ./server/api/.env
          echo "DATABASE_VERSION=${{ secrets.DATABASE_VERSION }}" >> ./server/api/.env
          echo "MERCURE_JWT_SECRET=${{ secrets.MERCURE_JWT_SECRET }}" >> ./server/api/.env
          echo "MERCURE_PUBLIC_URL=${{ secrets.MERCURE_PUBLIC_URL }}" >> ./server/api/.env
          echo "MERCURE_URL=${{ secrets.MERCURE_URL }}" >> ./server/api/.env
          echo "TRUSTED_HOSTS=^(localhost|php|api\.odicylens\.com)$" >> ./server/api/.env
          echo "TRUSTED_PROXIES=0.0.0.0" >> ./server/api/.env
          echo "JWT_PUBLIC_KEY=${{ secrets.JWT_PUBLIC_KEY }}" >> ./server/api/.env
          echo "JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}" >> ./server/api/.env
          echo "JWT_PASSPHRASE=${{ secrets.JWT_PASSPHRASE }}" >> ./server/api/.env
          echo "MAILER_DSN=${{ secrets.MAILER_DSN }}" >> ./server/api/.env

      - name: Build and push Docker image for odicylens-api
        uses: docker/build-push-action@v2
        with:
          context: ./server/api
          file: ./server/api/Dockerfile.prod
          push: true
          tags: popokola/odicylens-api:${{ steps.get_latest_tag.outputs.NEW_TAG }}

        
